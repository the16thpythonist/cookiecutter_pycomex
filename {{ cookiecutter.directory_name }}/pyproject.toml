[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "{{ cookiecutter.project_slug }}"
version = "{{ cookiecutter.version }}"
description = "Insert Description"
readme = "README.rst"
authors = [
    { name = "{{ cookiecutter.author_name }}", email = "{{ cookiecutter.author_email }}" }
]
maintainers = [
    { name = "{{ cookiecutter.author_name }}", email = "{{ cookiecutter.author_email }}" }
]
license = { text = "{{ cookiecutter.license }}" }
keywords = []
requires-python = ">=3.8.0,<4.0"
dependencies = [
    "pycomex>=0.9.2",
    "click>=7.1.2",
    "jinja2>=3.0.3",
    "matplotlib>=3.5.3",
    "numpy>=1.23.2",
    "python-decouple>=3.6",
    "poetry-bumpversion>=0.3.0",
    "rich-click>=1.7.0,<=1.8.0"
]

[project.optional-dependencies]
test = [
    "pytest>=7.1.3",
    "poetry-bumpversion>=0.3.0"
]

[project.scripts]
"{{ cookiecutter.project_slug }}" = "{{ cookiecutter.directory_name }}.cli:cli"

[tool.hatch.build]
skip-excluded-dirs = true

[tool.hatch.build.targets.wheel]
packages = ["{{ cookiecutter.directory_name }}", "{{ cookiecutter.directory_name }}/experiments"]

[tool.bumpversion]
current_version = "{{ cookiecutter.version }}"
parse = "(?<![=<>])(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = ["{major}.{minor}.{patch}"]
search = "{current_version}"
replace = "{new_version}"
regex = true
ignore_missing_version = true
tag = false
sign_tags = false
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
allow_dirty = true
commit = false
message = "Bump version: {current_version} → {new_version}"
commit_args = ""
files = [
    {filename = "{{ cookiecutter.directory_name }}/VERSION", search="{current_version}", replace="{new_version}"},
    {filename = "README.rst", search='version-{current_version}-orange.svg', replace='version-{new_version}-orange.svg'},
    {filename = "{{ cookiecutter.directory_name }}/__init__.py", search='__version__ = "{current_version}"', replace='__version__ = "{new_version}"'}
]